// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`

void initLogger({required String path}) =>
    RustLib.instance.api.crateApiLoggingInitLogger(path: path);

Future<List<LogEntry>> readLogs() =>
    RustLib.instance.api.crateApiLoggingReadLogs();

void logNative(
        {required String level,
        String? module,
        String? file,
        int? line,
        required String message,
        String? exception,
        String? stacktace}) =>
    RustLib.instance.api.crateApiLoggingLogNative(
        level: level,
        module: module,
        file: file,
        line: line,
        message: message,
        exception: exception,
        stacktace: stacktace);

class LogEntry {
  final String time;
  final String level;
  final String? module;
  final String? file;
  final int? line;
  final String message;
  final String structured;

  const LogEntry({
    required this.time,
    required this.level,
    this.module,
    this.file,
    this.line,
    required this.message,
    required this.structured,
  });

  @override
  int get hashCode =>
      time.hashCode ^
      level.hashCode ^
      module.hashCode ^
      file.hashCode ^
      line.hashCode ^
      message.hashCode ^
      structured.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LogEntry &&
          runtimeType == other.runtimeType &&
          time == other.time &&
          level == other.level &&
          module == other.module &&
          file == other.file &&
          line == other.line &&
          message == other.message &&
          structured == other.structured;
}
