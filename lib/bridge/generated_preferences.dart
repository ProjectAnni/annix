// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.81.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

import 'dart:ffi' as ffi;

abstract class ApiPreferenceStore {
  NativePreferenceStore newStaticMethodNativePreferenceStore({required String root, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewStaticMethodNativePreferenceStoreConstMeta;

  String? getMethodNativePreferenceStore({required NativePreferenceStore that, required String key, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetMethodNativePreferenceStoreConstMeta;

  void setMethodNativePreferenceStore(
      {required NativePreferenceStore that, required String key, required String value, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSetMethodNativePreferenceStoreConstMeta;

  void removeMethodNativePreferenceStore({required NativePreferenceStore that, required String key, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRemoveMethodNativePreferenceStoreConstMeta;

  void removePrefixMethodNativePreferenceStore(
      {required NativePreferenceStore that, required String prefix, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRemovePrefixMethodNativePreferenceStoreConstMeta;

  DropFnType get dropOpaqueMutexDummy1Connection;
  ShareFnType get shareOpaqueMutexDummy1Connection;
  OpaqueTypeFinalizer get MutexDummy1ConnectionFinalizer;
}

@sealed
class MutexDummy1Connection extends FrbOpaque {
  final ApiPreferenceStore bridge;
  MutexDummy1Connection.fromRaw(int ptr, int size, this.bridge) : super.unsafe(ptr, size);
  @override
  DropFnType get dropFn => bridge.dropOpaqueMutexDummy1Connection;

  @override
  ShareFnType get shareFn => bridge.shareOpaqueMutexDummy1Connection;

  @override
  OpaqueTypeFinalizer get staticFinalizer => bridge.MutexDummy1ConnectionFinalizer;
}

class NativePreferenceStore {
  final ApiPreferenceStore bridge;
  final MutexDummy1Connection conn;

  const NativePreferenceStore({
    required this.bridge,
    required this.conn,
  });

  static NativePreferenceStore newNativePreferenceStore(
          {required ApiPreferenceStore bridge, required String root, dynamic hint}) =>
      bridge.newStaticMethodNativePreferenceStore(root: root, hint: hint);

  String? get({required String key, dynamic hint}) => bridge.getMethodNativePreferenceStore(
        that: this,
        key: key,
      );

  void set({required String key, required String value, dynamic hint}) => bridge.setMethodNativePreferenceStore(
        that: this,
        key: key,
        value: value,
      );

  void remove({required String key, dynamic hint}) => bridge.removeMethodNativePreferenceStore(
        that: this,
        key: key,
      );

  void removePrefix({required String prefix, dynamic hint}) => bridge.removePrefixMethodNativePreferenceStore(
        that: this,
        prefix: prefix,
      );
}

class ApiPreferenceStoreImpl implements ApiPreferenceStore {
  final ApiPreferenceStorePlatform _platform;
  factory ApiPreferenceStoreImpl(ExternalLibrary dylib) =>
      ApiPreferenceStoreImpl.raw(ApiPreferenceStorePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory ApiPreferenceStoreImpl.wasm(FutureOr<WasmModule> module) => ApiPreferenceStoreImpl(module as ExternalLibrary);
  ApiPreferenceStoreImpl.raw(this._platform);
  NativePreferenceStore newStaticMethodNativePreferenceStore({required String root, dynamic hint}) {
    var arg0 = _platform.api2wire_String(root);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_new__static_method__NativePreferenceStore(arg0),
      parseSuccessData: _wire2api_native_preference_store,
      constMeta: kNewStaticMethodNativePreferenceStoreConstMeta,
      argValues: [root],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kNewStaticMethodNativePreferenceStoreConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "new__static_method__NativePreferenceStore",
        argNames: ["root"],
      );

  String? getMethodNativePreferenceStore({required NativePreferenceStore that, required String key, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_native_preference_store(that);
    var arg1 = _platform.api2wire_String(key);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_get__method__NativePreferenceStore(arg0, arg1),
      parseSuccessData: _wire2api_opt_String,
      constMeta: kGetMethodNativePreferenceStoreConstMeta,
      argValues: [that, key],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetMethodNativePreferenceStoreConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "get__method__NativePreferenceStore",
        argNames: ["that", "key"],
      );

  void setMethodNativePreferenceStore(
      {required NativePreferenceStore that, required String key, required String value, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_native_preference_store(that);
    var arg1 = _platform.api2wire_String(key);
    var arg2 = _platform.api2wire_String(value);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_set__method__NativePreferenceStore(arg0, arg1, arg2),
      parseSuccessData: _wire2api_unit,
      constMeta: kSetMethodNativePreferenceStoreConstMeta,
      argValues: [that, key, value],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSetMethodNativePreferenceStoreConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "set__method__NativePreferenceStore",
        argNames: ["that", "key", "value"],
      );

  void removeMethodNativePreferenceStore({required NativePreferenceStore that, required String key, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_native_preference_store(that);
    var arg1 = _platform.api2wire_String(key);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_remove__method__NativePreferenceStore(arg0, arg1),
      parseSuccessData: _wire2api_unit,
      constMeta: kRemoveMethodNativePreferenceStoreConstMeta,
      argValues: [that, key],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kRemoveMethodNativePreferenceStoreConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "remove__method__NativePreferenceStore",
        argNames: ["that", "key"],
      );

  void removePrefixMethodNativePreferenceStore(
      {required NativePreferenceStore that, required String prefix, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_native_preference_store(that);
    var arg1 = _platform.api2wire_String(prefix);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_remove_prefix__method__NativePreferenceStore(arg0, arg1),
      parseSuccessData: _wire2api_unit,
      constMeta: kRemovePrefixMethodNativePreferenceStoreConstMeta,
      argValues: [that, prefix],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kRemovePrefixMethodNativePreferenceStoreConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "remove_prefix__method__NativePreferenceStore",
        argNames: ["that", "prefix"],
      );

  DropFnType get dropOpaqueMutexDummy1Connection => _platform.inner.drop_opaque_MutexDummy1Connection;
  ShareFnType get shareOpaqueMutexDummy1Connection => _platform.inner.share_opaque_MutexDummy1Connection;
  OpaqueTypeFinalizer get MutexDummy1ConnectionFinalizer => _platform.MutexDummy1ConnectionFinalizer;

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  MutexDummy1Connection _wire2api_MutexDummy1Connection(dynamic raw) {
    return MutexDummy1Connection.fromRaw(raw[0], raw[1], this);
  }

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  NativePreferenceStore _wire2api_native_preference_store(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return NativePreferenceStore(
      bridge: this,
      conn: _wire2api_MutexDummy1Connection(arr[0]),
    );
  }

  String? _wire2api_opt_String(dynamic raw) {
    return raw == null ? null : _wire2api_String(raw);
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer

class ApiPreferenceStorePlatform extends FlutterRustBridgeBase<ApiPreferenceStoreWire> {
  ApiPreferenceStorePlatform(ffi.DynamicLibrary dylib) : super(ApiPreferenceStoreWire(dylib));

// Section: api2wire

  @protected
  wire_MutexDummy1Connection api2wire_MutexDummy1Connection(MutexDummy1Connection raw) {
    final ptr = inner.new_MutexDummy1Connection();
    _api_fill_to_wire_MutexDummy1Connection(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_NativePreferenceStore> api2wire_box_autoadd_native_preference_store(NativePreferenceStore raw) {
    final ptr = inner.new_box_autoadd_native_preference_store_1();
    _api_fill_to_wire_native_preference_store(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_1(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: finalizer

  late final OpaqueTypeFinalizer _MutexDummy1ConnectionFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_MutexDummy1ConnectionPtr);
  OpaqueTypeFinalizer get MutexDummy1ConnectionFinalizer => _MutexDummy1ConnectionFinalizer;
// Section: api_fill_to_wire

  void _api_fill_to_wire_MutexDummy1Connection(MutexDummy1Connection apiObj, wire_MutexDummy1Connection wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_box_autoadd_native_preference_store(
      NativePreferenceStore apiObj, ffi.Pointer<wire_NativePreferenceStore> wireObj) {
    _api_fill_to_wire_native_preference_store(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_native_preference_store(NativePreferenceStore apiObj, wire_NativePreferenceStore wireObj) {
    wireObj.conn = api2wire_MutexDummy1Connection(apiObj.conn);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class ApiPreferenceStoreWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  ApiPreferenceStoreWire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  ApiPreferenceStoreWire.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>('get_dart_object');
  late final _get_dart_object = _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>('drop_dart_object');
  late final _drop_dart_object = _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr = _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>('new_dart_opaque');
  late final _new_dart_opaque = _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>('init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr.asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  WireSyncReturn wire_new__static_method__NativePreferenceStore(
    ffi.Pointer<wire_uint_8_list> root,
  ) {
    return _wire_new__static_method__NativePreferenceStore(
      root,
    );
  }

  late final _wire_new__static_method__NativePreferenceStorePtr =
      _lookup<ffi.NativeFunction<WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>)>>(
          'wire_new__static_method__NativePreferenceStore');
  late final _wire_new__static_method__NativePreferenceStore = _wire_new__static_method__NativePreferenceStorePtr
      .asFunction<WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_get__method__NativePreferenceStore(
    ffi.Pointer<wire_NativePreferenceStore> that,
    ffi.Pointer<wire_uint_8_list> key,
  ) {
    return _wire_get__method__NativePreferenceStore(
      that,
      key,
    );
  }

  late final _wire_get__method__NativePreferenceStorePtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_get__method__NativePreferenceStore');
  late final _wire_get__method__NativePreferenceStore = _wire_get__method__NativePreferenceStorePtr
      .asFunction<WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>, ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_set__method__NativePreferenceStore(
    ffi.Pointer<wire_NativePreferenceStore> that,
    ffi.Pointer<wire_uint_8_list> key,
    ffi.Pointer<wire_uint_8_list> value,
  ) {
    return _wire_set__method__NativePreferenceStore(
      that,
      key,
      value,
    );
  }

  late final _wire_set__method__NativePreferenceStorePtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_set__method__NativePreferenceStore');
  late final _wire_set__method__NativePreferenceStore = _wire_set__method__NativePreferenceStorePtr.asFunction<
      WireSyncReturn Function(
          ffi.Pointer<wire_NativePreferenceStore>, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_remove__method__NativePreferenceStore(
    ffi.Pointer<wire_NativePreferenceStore> that,
    ffi.Pointer<wire_uint_8_list> key,
  ) {
    return _wire_remove__method__NativePreferenceStore(
      that,
      key,
    );
  }

  late final _wire_remove__method__NativePreferenceStorePtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_remove__method__NativePreferenceStore');
  late final _wire_remove__method__NativePreferenceStore = _wire_remove__method__NativePreferenceStorePtr
      .asFunction<WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>, ffi.Pointer<wire_uint_8_list>)>();

  WireSyncReturn wire_remove_prefix__method__NativePreferenceStore(
    ffi.Pointer<wire_NativePreferenceStore> that,
    ffi.Pointer<wire_uint_8_list> prefix,
  ) {
    return _wire_remove_prefix__method__NativePreferenceStore(
      that,
      prefix,
    );
  }

  late final _wire_remove_prefix__method__NativePreferenceStorePtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_remove_prefix__method__NativePreferenceStore');
  late final _wire_remove_prefix__method__NativePreferenceStore = _wire_remove_prefix__method__NativePreferenceStorePtr
      .asFunction<WireSyncReturn Function(ffi.Pointer<wire_NativePreferenceStore>, ffi.Pointer<wire_uint_8_list>)>();

  wire_MutexDummy1Connection new_MutexDummy1Connection() {
    return _new_MutexDummy1Connection();
  }

  late final _new_MutexDummy1ConnectionPtr =
      _lookup<ffi.NativeFunction<wire_MutexDummy1Connection Function()>>('new_MutexDummy1Connection');
  late final _new_MutexDummy1Connection =
      _new_MutexDummy1ConnectionPtr.asFunction<wire_MutexDummy1Connection Function()>();

  ffi.Pointer<wire_NativePreferenceStore> new_box_autoadd_native_preference_store_1() {
    return _new_box_autoadd_native_preference_store_1();
  }

  late final _new_box_autoadd_native_preference_store_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_NativePreferenceStore> Function()>>(
          'new_box_autoadd_native_preference_store_1');
  late final _new_box_autoadd_native_preference_store_1 =
      _new_box_autoadd_native_preference_store_1Ptr.asFunction<ffi.Pointer<wire_NativePreferenceStore> Function()>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_1(
    int len,
  ) {
    return _new_uint_8_list_1(
      len,
    );
  }

  late final _new_uint_8_list_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>('new_uint_8_list_1');
  late final _new_uint_8_list_1 = _new_uint_8_list_1Ptr.asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void drop_opaque_MutexDummy1Connection(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_MutexDummy1Connection(
      ptr,
    );
  }

  late final _drop_opaque_MutexDummy1ConnectionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>('drop_opaque_MutexDummy1Connection');
  late final _drop_opaque_MutexDummy1Connection =
      _drop_opaque_MutexDummy1ConnectionPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_MutexDummy1Connection(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_MutexDummy1Connection(
      ptr,
    );
  }

  late final _share_opaque_MutexDummy1ConnectionPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          'share_opaque_MutexDummy1Connection');
  late final _share_opaque_MutexDummy1Connection =
      _share_opaque_MutexDummy1ConnectionPtr.asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_LocalDb> new_box_autoadd_local_db_0() {
    return _new_box_autoadd_local_db_0();
  }

  late final _new_box_autoadd_local_db_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_LocalDb> Function()>>('new_box_autoadd_local_db_0');
  late final _new_box_autoadd_local_db_0 =
      _new_box_autoadd_local_db_0Ptr.asFunction<ffi.Pointer<wire_LocalDb> Function()>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>('free_WireSyncReturn');
  late final _free_WireSyncReturn = _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();

  ffi.Pointer<wire_LocalStore> new_box_autoadd_local_store_2() {
    return _new_box_autoadd_local_store_2();
  }

  late final _new_box_autoadd_local_store_2Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_LocalStore> Function()>>('new_box_autoadd_local_store_2');
  late final _new_box_autoadd_local_store_2 =
      _new_box_autoadd_local_store_2Ptr.asFunction<ffi.Pointer<wire_LocalStore> Function()>();
}

final class _Dart_Handle extends ffi.Opaque {}

final class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_MutexDummy1Connection extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_NativePreferenceStore extends ffi.Struct {
  external wire_MutexDummy1Connection conn;
}

final class wire_MutexRepoDatabaseRead extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_LocalDb extends ffi.Struct {
  external wire_MutexRepoDatabaseRead repo;
}

final class wire_MutexConnection extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_LocalStore extends ffi.Struct {
  external wire_MutexConnection conn;
}

typedef DartPostCObjectFnType
    = ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(DartPort port_id, ffi.Pointer<ffi.Void> message)>>;
typedef DartPort = ffi.Int64;
